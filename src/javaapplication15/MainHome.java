/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.

test

* cosas por poner:  
    - Identificador de msg para poder usar varios thread sin ningun problema
    -Verificar paquete si es para el mouse o el texto
    - long press button para back y hacer delete mas seguidos.
     - hacer el hilo de la conexion por wifi para que no este recibiendo datos siempre
 */
package javaapplication15;

import com.sun.awt.AWTUtilities;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.MouseInfo;
import java.awt.Shape;
import java.awt.Toolkit;
import java.awt.geom.RoundRectangle2D;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Arrays;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.microedition.io.StreamConnection;
import javax.microedition.io.StreamConnectionNotifier;
import javax.swing.JFrame;
/**
 *
 * @author Itic
 */
public class MainHome extends JFrame{

    static String everything;
    static String sentence="";
    static String function="";
   
    static int robotX;
    static int robotY;
      Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
       int width = (int) screenSize.getWidth();
        int height = (int) screenSize.getHeight();
  static Thread waitThread = new Thread(new WaitThread());
    /**
     * Creates new form MainHome
     */
     static String msg="";
     static String textoAct="";
     static int numeroDeMsg=0;
    static  boolean Conection=false;
     static String BlueWi="default";
     static int mediatype=0;
   
   
     
    public String getText( ){       
    return textoAct;
    }
    public void setText(String texto){
        textoAct=texto;
    }
    public void setMediaType(int type){
        mediatype=type;
    }
    public int getMediaType(){
        return mediatype;
    }
    
    public int getnumMesg(){
        return numeroDeMsg;
    }
    public int getMouseX(){
        return robotX;
    }
     public int getMouseY(){
        return robotY;
    }
     public void setMouseX(int x){
         robotX=x;
     }
     public void setMouseY(int y){
         robotY=y;
     }
     
     
     public String Bluetooth(){
         
     return BlueWi;
     }
     public void setBluetooth(String b){
         BlueWi=b;
         
     }
    
    
    
    public MainHome() {
        
        try {
            initComponents();
            // this.setBackground(new Color(0,0,0,0));
            // cordenadas iconos  --*   primer icono (70,200), luego se incrementara 100 al x  -> (170,200)  , (270, 200)
            
            jLabel3.setText("IP: "+InetAddress.getLocalHost().getHostAddress().toString());
            jLabel3.setVisible(false);
            jComboBox1.setVisible(false);
            jSeparator1.setVisible(false);
            jLabel4.setVisible(false);
            jLabel5.setVisible(false);
            jLabel6.setVisible(false);
            jLabel7.setVisible(false);
            jLabel8.setVisible(false);
            /*jLabel6.setLocation(70, 200);
            jLabel7.setLocation(170, 200);*/
            
             Shape forma = new RoundRectangle2D.Double(0, 0, this.getBounds().width, this.getBounds().height,128,128); 
                AWTUtilities.setWindowShape(this, forma)  ; 
            
        } catch (UnknownHostException ex) {
            Logger.getLogger(MainHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jMenuItem4.setText("jMenuItem4");

        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(255, 255, 255));
        setFocusTraversalPolicyProvider(true);
        setMinimumSize(new java.awt.Dimension(300, 545));
        setUndecorated(true);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel3.setFont(new java.awt.Font("Kartika", 2, 12)); // NOI18N
        jLabel3.setText("jLabel3");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 80, 210, 40);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_action_network_wifi_1.png"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(220, 20, 60, 50);

        jLabel9.setText(".");
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel9MousePressed(evt);
            }
        });
        getContentPane().add(jLabel9);
        jLabel9.setBounds(0, -4, 300, 30);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_action_bluetooth.png"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(220, 20, 60, 50);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication15/ic_action_mouse.png"))); // NOI18N
        getContentPane().add(jLabel6);
        jLabel6.setBounds(40, 190, 70, 60);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_action_keyboard.png"))); // NOI18N
        getContentPane().add(jLabel7);
        jLabel7.setBounds(130, 190, 70, 50);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication15/ic_action_reply_all.png"))); // NOI18N
        jLabel8.setText("jLabel8");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel8);
        jLabel8.setBounds(50, 470, 60, 60);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "61558", "61559", "61560", "61561", "61562" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(180, 90, 80, 22);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Miguel\\Documents\\NetBeansProjects\\JavaApplication15\\src\\javaapplication15\\powerr.png")); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel1);
        jLabel1.setBounds(130, 460, 50, 80);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(40, 120, 220, 10);

        jComboBox2.setFont(new java.awt.Font("Kartika", 0, 12)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Conection...", "Wifi", "Bluetooth" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox2);
        jComboBox2.setBounds(70, 30, 150, 24);

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication15/smartt.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel2MouseReleased(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, -40, 310, 620);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/javaapplication15/Capture2.png"))); // NOI18N
        jLabel10.setText("jLabel10");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(30, 80, 260, 380);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 30, 250, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        // TODO add your handling code here:
        
      
    }//GEN-LAST:event_jLabel2MousePressed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
       
        
        
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseReleased

    private void jLabel2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseReleased
        // TODO add your handling code here:
         /* mouseX = MouseInfo.getPointerInfo().getLocation().x;
         mouseY= MouseInfo.getPointerInfo().getLocation().y;
        this.setLocation(mouseX,mouseY);*/
    }//GEN-LAST:event_jLabel2MouseReleased

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
         System.out.println(Bluetooth());
        System.exit(0);
      
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here
       
      
        if(jComboBox2.getSelectedItem().toString()=="Conection..."){
            jLabel3.setVisible(false);
            jComboBox1.setVisible(false);
            jSeparator1.setVisible(false);
        } else if( jComboBox2.getSelectedItem().toString()=="Wifi"){
            try {
                jLabel3.setVisible(true);
                jLabel3.setText("IP: "+InetAddress.getLocalHost().getHostAddress().toString());
                jComboBox1.setVisible(true); 
                jSeparator1.setVisible(true);
                jComboBox2.setEnabled(false);
                jLabel5.setVisible(true);
                jLabel4.setVisible(false);
                Conection=true;
               
            } catch (UnknownHostException ex) {
                Logger.getLogger(MainHome.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (jComboBox2.getSelectedItem().toString()=="Bluetooth")
        {
            jLabel3.setVisible(true);
            jComboBox1.setVisible(false);
              jComboBox2.setEnabled(false);
              jSeparator1.setVisible(true);
              jLabel4.setVisible(true);
              jLabel5.setVisible(false);
              
              
              waitThread.start();
            try {
                Thread.sleep(500);
            } catch (InterruptedException ex) {
                Logger.getLogger(MainHome.class.getName()).log(Level.SEVERE, null, ex);
            }
               jLabel3.setText(Bluetooth());
        }
        
      
     
       
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
   
    }//GEN-LAST:event_formWindowGainedFocus

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
       
    }//GEN-LAST:event_formMouseEntered

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
          // TODO add your handling code here:
       
    }//GEN-LAST:event_formWindowLostFocus

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void jLabel9MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MousePressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jLabel9MousePressed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked

        
    }//GEN-LAST:event_jLabel8MouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
 
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                MainHome main= new MainHome();
                main.setVisible(true);
             //  main.setLocationRelativeTo(null);
             main.setLocation(100, 100);
               
                 BufferedReader br = null;
        try {
            br = new BufferedReader(new FileReader("Conection.txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainHome.class.getName()).log(Level.SEVERE, null, ex);
        }
    try {
        StringBuilder sb = new StringBuilder();
        String line = br.readLine();

        while (line != null) {
            sb.append(line);
            sb.append(System.lineSeparator());
            line = br.readLine();
        }
       everything = sb.toString();
       
    }   catch (IOException ex) {
            Logger.getLogger(MainHome.class.getName()).log(Level.SEVERE, null, ex);
        }
               
               
              
          
            }
        });

           try {
      int port = 61558;

      
      DatagramSocket dsocket = new DatagramSocket(port);
      byte[] buffer = new byte[2048];
      DatagramPacket packet = new DatagramPacket(buffer, buffer.length);
      while (true) { 
        dsocket.receive(packet);

       msg = new String(buffer, 0, packet.getLength());
        System.out.println(packet.getAddress().getHostAddress() + ": "
          + msg);
        numeroDeMsg+=1;
      //  System.out.println(numeroDeMsg);
       
        packet.setLength(buffer.length);
        
   
                 if(msg.startsWith("Write")){       
                         String startPosition= msg;
                             String[] arrayStartPosition= new String[3];
                                     arrayStartPosition=startPosition.split(",");
                                        textoAct=(arrayStartPosition[1].trim());
                                        ThreadTexto texto= new ThreadTexto();
                                        texto.start();
                              // System.out.println("entro");
              }if (msg.startsWith("0")){
                  String startPosition= msg;
                             String[] arrayStartPosition= new String[3];
                                     arrayStartPosition=startPosition.split(",");
                                        robotX=(Integer.parseInt(arrayStartPosition[1]));
                                        robotY=(Integer.parseInt(arrayStartPosition[2]));
                                        ThreadMouse mouse= new ThreadMouse();
                                        mouse.start();
       
       }if (msg.startsWith("f")){
                    String funcion= msg;
                             String[] arrayfuncion= new String[3];
                                     arrayfuncion=funcion.split(",");
                                        textoAct=(arrayfuncion[1].trim());
                                        ThreadFunciones func= new ThreadFunciones();
                                        func.start();
              }if(msg.startsWith("System")){
                   String funcion= msg;
                             String[] arrayfuncion= new String[3];
                                     arrayfuncion=funcion.split(",");
                                        textoAct=(arrayfuncion[1].trim());
                                        ThreadFunciones func= new ThreadFunciones();
                                        func.start();
                  
              }
              if(msg.startsWith("FuncionMediaPlayer.class")){
                mediatype=(1);
              }
              if(msg.startsWith("FuncionVLC.class")){
                  mediatype=(2);
              }
              if(msg.startsWith("Media")){
                String media= msg;
                  String[] arraymedia= new String [3];
                    arraymedia=media.split(",");
                    textoAct=(arraymedia[1].trim());
                    ThreadMedia mediaf= new ThreadMedia();
                    mediaf.start();
                    
              }if(msg.startsWith("Presentation")){
                  String funcion= msg;
                             String[] arrayfuncion= new String[3];
                                     arrayfuncion=funcion.split(",");
                                        textoAct=(arrayfuncion[1].trim());
                                        ThreadFunciones func= new ThreadFunciones();
                                        func.start();   
              }
              
        
      
      }
           }catch (NullPointerException nell){
                    System.err.println("entra en el primer null pointer exception");
                }
     catch (Exception e) {
      System.err.println(e);
    }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
